@model BlueDataWeb.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutCateProduct.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Product</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductName)
            @Html.ValidationMessageFor(model => model.ProductName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImagePath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImagePath)
            @Html.ValidationMessageFor(model => model.ImagePath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UnitPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UnitPrice)
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UnitPriceNew)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UnitPriceNew)
            @Html.ValidationMessageFor(model => model.UnitPriceNew)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryID, "Category")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CategoryID", String.Empty)
            @Html.ValidationMessageFor(model => model.CategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentCategoryID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ParentCategoryID)
            @Html.ValidationMessageFor(model => model.ParentCategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MetaKeywords)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MetaKeywords)
            @Html.ValidationMessageFor(model => model.MetaKeywords)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MetaDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MetaDescription)
            @Html.ValidationMessageFor(model => model.MetaDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MetaTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MetaTitle)
            @Html.ValidationMessageFor(model => model.MetaTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Published)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Published)
            @Html.ValidationMessageFor(model => model.Published)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsNew)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsNew)
            @Html.ValidationMessageFor(model => model.IsNew)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rating)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rating)
            @Html.ValidationMessageFor(model => model.Rating)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    <a class="toolbar back" href="#">Trở về danh sách</a>
</div>