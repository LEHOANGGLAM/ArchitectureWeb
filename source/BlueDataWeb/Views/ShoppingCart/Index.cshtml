@model ExpressBD.ViewModels.ShoppingCartViewModel
@using ExpressBD.Models;
@{
    ViewBag.Title = "Shopping Cart";
    Layout = "~/Views/Shared/_LayoutShoppingcart.cshtml";
}
<script type="text/javascript">

    function checkMoney(AmountValue) {
        //var AmountValue = document.getElementById('Gia').value;
        var num = parseFloat(AmountValue);
        if (isNaN(num))
            num = "0";
        sign = (num == (num = Math.abs(num)));
        num = Math.floor(num * 100 + 0.50000000001);
        cents = num % 100;
        num = Math.floor(num / 100).toString();
        if (cents < 10)
            cents = "0" + cents;
        for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3) ; i++)
            num = num.substring(0, num.length - (4 * i + 3)) + ',' + num.substring(num.length - (4 * i + 3));
        num = (((sign) ? '' : '-') + num);

        return num;
    }

    $(function () {
        // Document.ready -> link up remove event handler 
        $(".RemoveLink").click(function () {
            //// Get the id from the link 
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                clearUpdateMessage();
                // Perform the ajax post 
                $.post("/ShoppingCart/RemoveFromCart", { "id": recordToDelete },
                    function (data) {
                        // Successful requests get here 
                        // Update the page elements 
                        //if (data.ItemCount == 0) {
                        $('#row-' + data.DeleteId).fadeOut('slow');
                        //} else {
                        //    $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        //}
                        $('#cart-total').text(checkMoney(data.CartTotal));
                        $('#Sum').text(data.Sumcart);
                        $('#update-message').text(htmlDecode(data.Message));
                        create("default", { title: 'Thông báo', text: data.Message });
                        $('#cart-status').text('' + data.CartCount + '');
                        $('#carttotal').text('(' + checkMoney(data.CartTotal) + ') VND');
                        if (data.CartTotal == 0) {
                            $('.testtotal').val('true');
                        }
                    });
            }
        });

        //$(".RefreshQuantity").click(function () {
        $('.quantity').change(function () {
            // Get the id from the link 
            var recordToUpdate = $(this).attr("dataid");
            //Set quantity number to 0 if input value is empty
            var countToUpdate = 0;
            //if ($("#" + $(this).attr("txt-id")).val().trim() !== '') {
            countToUpdate = $(this).val();

            if (recordToUpdate != '') {
                clearUpdateMessage();
                // Perform the ajax post 
                $.post("/ShoppingCart/UpdateCartCount", { "id": recordToUpdate, "cartCount": countToUpdate },
                function (data) {
                    // Successful requests get here 
                    // Update the page elements                        
                    if (data.ItemCount == 0) {
                        $('#row-' + data.DeleteId).fadeOut('slow');
                    }
                    $('#update-message').text(htmlDecode(data.Message));

                    //Check for not process the callback data when server error occurs
                    if (data.ItemCount != -1) {
                        $('#cart-total').text(checkMoney(data.CartTotal));
                        $('#Sum').text(data.Sumcart);
                        $('#cart-status').text('' + data.CartCount + '');
                        $('#sumitem-' + recordToUpdate).text(checkMoney(data.SumItemcart))
                        create("default", { title: 'Thông báo', text: 'Cập nhật giỏ hàng thành công' });
                        $('#carttotal').text('(' + checkMoney(data.CartTotal) + ') VND');

                    }
                });
            }
        });
    });

    function clearUpdateMessage() {
        // Reset update-message area
        $('#update-message').text('');
    }
    function htmlDecode(value) {
        if (value) {
            return $('<div />').html(value).text();
        }
        else {
            return '';
        }
    }
    if (typeof String.prototype.trim !== 'function') {
        String.prototype.trim = function () {
            return this.replace(/^\s+|\s+$/g, '');
        }
    }



    function create(template, vars, opts) {
        return $container.notify("create", template, vars, opts);
    }

    $(function () {

        $container = $("#container").notify();

        // bindings for the examples
        $("#default").click(function () {
            create("default", { title: 'Default Notification', text: 'Example of a default notification.  I will fade out after 5 seconds' });
        });
    });

    //Nếu giỏ hàng trống thì không cho thực hiện chức năng thanh toán

    $(function () {
        $(".payments").click(function () {
            if ($('.testtotal').val() == 'true') {
                create("themeroller", { title: 'Warning!', text: 'Giỏ hàng của bạn trống, bạn không thể tiến hành thanh toán' }, {
                    custom: true,
                    expires: false
                });
                return false;
            }
            else
                return true;

        });
    });
</script>
<div class="bg-cart">
    <div class="bg-cart-white minheight">
        <div class="pad15">
            <table border="0" class="shop-cart">
                <tbody>
                    <tr>
                        <th>X&oacute;a</th>
                        <th>Sản Phẩm</th>
                        <th>T&ecirc;n h&agrave;ng</th>
                        <th>Số lượng</th>
                        <th>Đơn gi&aacute;</th>
                        <th>Th&agrave;nh tiền</th>
                    </tr>
                    @{int ix = 0;}
                    @foreach (var item in Model.CartItems)
                    {
        
                        <tr id="row-@item.ItemId">
                            <td align="center">
                                <a href="#" class="RemoveLink price_discount_delete" data-id="@item.ItemId">Xóa</a></td>
                          
                            
                                @if (Model.Colors.Count() > 0 && item.ColorId !=null)
                                {
                                     Color color = Model.Colors.Where(m => m.Id == item.ColorId).FirstOrDefault();                                    
                                    <td align="center" class="pro-img1">
                                        <img src="~/Images/Colors/Img80.80/@color.ImagePath" data-src ="/Images/Colors/@color.ImagePath"/>
                                    </td>
                                    <td>
                                        <a href="@Url.RouteUrl("product", new { titlecate = ExpressBD.Utility.HelperSEO.ToSeoUrl(item.Product.Category.CategoryName), title = ExpressBD.Utility.HelperSEO.ToSeoUrl(item.Product.ProductName), id = item.ProductId })">@item.Product.ProductName - @(color.ProductColor == null ? "" : color.ProductColor.Name)</a>
                                    </td>
                                }
                                else
                                {
                                    <td align="center" class="pro-img1">
                                        <img src="~/Images/Products/Img80.80/@item.Product.ImagePath" data-src ="/Images/Products/@item.Product.ImagePath"/>                                     
                                    </td>
                                    <td>
                                         <a href="@Url.RouteUrl("product", new { titlecate = ExpressBD.Utility.HelperSEO.ToSeoUrl(item.Product.Category.CategoryName), title = ExpressBD.Utility.HelperSEO.ToSeoUrl(item.Product.ProductName), id = item.ProductId })">@item.Product.ProductName</a>
                     
                                    </td>
                                }
                            <script>
                                $().ready(function () {
                                    $('#row-' + @item.ItemId + ' img').each(function () {
                                        var urlsrc = $(this).attr("data-src");
                                        $(this).attr('src', $(this).attr('src'))
                                                  .error(function () { $(this).attr('src', urlsrc); });

                                    });

                                });
                            </script>
                            <td align="center">

                                @Html.DropDownList("Quantity", new SelectList(ViewBag.Items as System.Collections.IList, "Value", "Text", Model.CartItems[ix].Quantity), new { dataid = item.ItemId, @class = "quantity" })
                            </td>
                            <td align="center">
                                @string.Format("{0: 0,0}", item.Product.UnitPriceNew)

                            </td>
                            <td align="right" id="sumitem-@item.ItemId">
                                @string.Format("{0: 0,0}", (Model.CartItems[ix].Quantity * item.Product.UnitPriceNew))</td>
                        </tr>
                                ix++;
                    }
                    <tr>
                        <td align="right" colspan="5">Tổng cộng:</td>
                        <td align="right" id="cart-total">
                            @string.Format("{0: 0,0}", Model.CartTotal)</td>
                    </tr>
                </tbody>
            </table>
            <div class="clear10"></div>
            <div class="div100">
                @if (Model.CartTotal > 0)
                {
                    <div class="floatr continuebuy">@Html.ActionLink("Thanh toán", "AddressAndPayment", "Payment", "", new { @class = "payments" })</div>
                    <input type="hidden" class="testtotal" />
                }
                else
                {
                    <div class="floatr continuebuy">@Html.ActionLink("Thanh toán", "Index", "Home")</div>
                }
                <div class="floatl continuebuy">@Html.ActionLink("Tiếp tục mua hàng", "Index", "Home")</div>
            </div>
            <div class="clear20"></div>
        </div>
        <!--end pad15-->
    </div>
    <!--end bg-cart ưhite-->
</div>
<!--end bg-cart-->
<div class="clear10"></div>
@Html.Partial("_Notify")