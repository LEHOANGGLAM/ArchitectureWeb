@model BlueDataWeb.Models.Entites.Membership
@using BlueDataWeb.Models.Entites;
@{
    ViewBag.Title = "Create";
    BlueDataWebEntities db = new BlueDataWebEntities();
    var role = db.Roles.ToList();
}
@using (Html.BeginForm("Create", "Membership", FormMethod.Post, new { id = "FormCreateUser" }))
{
    @Html.ValidationSummary(true)

    <div class="mar10 borall">
        <div class="floatl">
            <span class="floatl">
                <img src="/Areas/Admin/images/icon-48-generic.png" />
            </span>
            <span class="title-name">Thêm thành viên</span>
        </div>
        <ul class="floatr toolbar-list">
            <li id="toolbar-cancel" class="button">
                <a class="toolbar" href="/admin/Membership/Index">
                    <span class="icon-32-cancel"></span>
                    Hủy bỏ
                </a>
            </li>
            <li class="button">
                <div class="toolbar">
                    <span class="icon-32-apply"></span>
                    <input type="submit" value="Lưu" />
                </div>
            </li>
        </ul>
    </div>
    <!--end borall-->

    <div class="clear0"></div>
    <div class="mar10 borall">
        <div class="div100">

            <div>

                <fieldset class="fromlist">

                    <ul>
                        <li>
                            @Html.LabelFor(model => model.Username, "Tên đăng nhập")

                            <input class="inputbox" type="text" name="Username" id="UsernameCre" size="50" />
                            @Html.ValidationMessageFor(model => model.Username, null, new { @class = "validate" })

                            <span id="checkusername" class="clear" style="color: red; font-style: italic">@ViewBag.usernametest</span>
                        </li>
                        <li>
                            @Html.LabelFor(model => model.Password, "Mật khẩu")
                            <input class="inputbox" type="password" name="Password" id="PassCre" size="50" />
                            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "validate" })
                            <span id="checkpassCre" class="clear" style="color: red; font-style: italic"></span>
                        </li>
                        <li>
                            @Html.LabelFor(model => model.Email, "Email")
                            <input class="inputbox" type="text" name="Email" id="EmailCre" size="50" />
                            @Html.ValidationMessageFor(model => model.Email, null, new { @class = "validate" })

                            <span id="checkemail" class="clear" style="color: red; font-style: italic">@ViewBag.emailtest</span>
                        </li>
                    </ul>
                </fieldset>
            </div>
        </div>
    </div>
    <div class="clear0"></div>
    <div class="mar10 borall">
        <div class="div100">

            <div>

                <fieldset class="fromlist">
                    <legend>Nhóm quyền</legend>
                    @foreach (var r in role)
                    {
                        <input type="checkbox" name="chk@(r.RoleId)" />
                        <span> @r.Description</span> <br />
                    }
                </fieldset>
            </div>
        </div>
    </div>
}

<div>
    <a class="toolbar back" href="#">Trở về danh sách</a>
</div>

<script type="text/javascript">
    function CheckNull() {

        var UsernameCre = $('#UsernameCre').val();
        var PassCre = $('#PassCre').val();
        var EmailCre = $('#EmailCre').val();

        if (UsernameCre == null || UsernameCre == "") {
            document.getElementById("checkusername").innerHTML = "vui lòng nhập Tên đăng nhập";
            return false;
        }
        if (PassCre == null || PassCre == "") {
            document.getElementById("checkpassCre").innerHTML = "vui lòng nhập mật khẩu";
            return false;
        }
        if (EmailCre == null || EmailCre == "") {
            document.getElementById("checkemail").innerHTML = "vui lòng nhập Email";
            return false;
        }

        return true;
    }
</script>

<script type="text/javascript">
    function CheckEmail() {
        if (!isValidEmailAddress($('#EmailCre').val())) {
            document.getElementById('checkemail').innerHTML = 'Email không hợp lệ';
            return false;
        }
        else {

            return true;

        }
    }

    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
        return pattern.test(emailAddress);
    }
</script>

<script type="text/javascript">
    $('#FormCreateUser').submit(function () {
        return !!(CheckNull() & CheckEmail());
    });
</script>